// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFF_Api_App.DB;

namespace SFF_Api_App.Migrations
{
    [DbContext(typeof(SFF_DbContext))]
    [Migration("20200606163037_new2")]
    partial class new2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SFF_Api_App.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("StudioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TriviaNumber")
                        .HasColumnType("int");

                    b.Property<string>("TriviaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudioId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Action",
                            Stock = 5,
                            StudioName = "Studio1",
                            Title = "ABC_Movie",
                            TriviaNumber = 1,
                            TriviaTitle = "Den är bra film"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Action",
                            Stock = 5,
                            StudioName = "Studio1",
                            Title = "ABCD_Movie",
                            TriviaNumber = 2,
                            TriviaTitle = "Den är bra action film"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Action",
                            Stock = 5,
                            StudioName = "Studio2",
                            Title = "ABCDE_Movie",
                            TriviaNumber = 0
                        });
                });

            modelBuilder.Entity("SFF_Api_App.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRented")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieNumber")
                        .HasColumnType("int");

                    b.Property<string>("StudioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudioNumber")
                        .HasColumnType("int");

                    b.HasKey("RentalId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalId = 1,
                            DateRented = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieName = "ABC_Movie",
                            MovieNumber = 1,
                            StudioName = "Studio 1",
                            StudioNumber = 1
                        });
                });

            modelBuilder.Entity("SFF_Api_App.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grade = 5,
                            MovieId = 1
                        });
                });

            modelBuilder.Entity("SFF_Api_App.Models.Studio", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudioId");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            StudioId = 1,
                            Name = "Studio 1",
                            Ort = "Ort 1"
                        },
                        new
                        {
                            StudioId = 2,
                            Name = "Studio 2",
                            Ort = "Ort 2"
                        },
                        new
                        {
                            StudioId = 3,
                            Name = "Studio 3",
                            Ort = "Ort 3"
                        });
                });

            modelBuilder.Entity("SFF_Api_App.Models.Trivias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Trivias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Title = "Den är bra film"
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            Title = "Den är bra action film"
                        });
                });

            modelBuilder.Entity("SFF_Api_App.Models.Movie", b =>
                {
                    b.HasOne("SFF_Api_App.Models.Studio", "Studio")
                        .WithMany("Movies")
                        .HasForeignKey("StudioId");
                });

            modelBuilder.Entity("SFF_Api_App.Models.Review", b =>
                {
                    b.HasOne("SFF_Api_App.Models.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFF_Api_App.Models.Trivias", b =>
                {
                    b.HasOne("SFF_Api_App.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.HasOne("SFF_Api_App.Models.Review", null)
                        .WithMany("Trivia")
                        .HasForeignKey("ReviewId");
                });
#pragma warning restore 612, 618
        }
    }
}
